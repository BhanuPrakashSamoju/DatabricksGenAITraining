Sure! Here's the code to perform binary sort on the given list:

```python
def binary_sort(arr):
    # Sort the list using binary sort
    for i in range(1, len(arr)):
        # Get the current element to be sorted
        key = arr[i]

        # Set the initial positions for binary search
        low = 0
        high = i - 1

        # Perform binary search to find the correct position for the current element
        while low <= high:
            # Calculate the middle index of the current range
            mid = (low + high) // 2

            # If the current element is smaller than the middle element, search in the left half
            if key < arr[mid]:
                high = mid - 1
            # If the current element is greater than the middle element, search in the right half
            else:
                low = mid + 1

        # Shift the elements greater than the current element to the right
        for j in range(i, low, -1):
            arr[j] = arr[j - 1]

        # Insert the current element at the correct position
        arr[low] = key

    # Return the sorted list
    return arr

# Test the function
arr = [2, 6, 8, 1, 5, 3]
sorted_arr = binary_sort(arr)
print(sorted_arr)
```

In this code, we define a function `binary_sort` that takes an array (`arr`) as input and performs binary sort on it. 

To perform binary sort, we iterate through the list starting from the second element. For each element, we find its correct position using binary search. We shift the elements greater than the current element to the right and insert the current element at the correct position.

Finally, we test the function by calling it with the input list `[2, 6, 8, 1, 5, 3]` and print the sorted list.

Please note that the code is written in Python as you haven't specified any language preference. If you want the code in a different language, please let me know.
